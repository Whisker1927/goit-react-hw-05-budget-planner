{"version":3,"sources":["components/shared/Form.js","components/shared/Label.js","components/shared/Input.js","components/shared/Button.js","components/BudgetForm/BudgetForm.js","redux/budget/type.js","components/BudgetForm/BudgetFormContainer.js","redux/budget/action.js","components/ExpenseForm/ExpenseForm.js","components/ExpenseForm/ExpenseFormContainer.js","components/ExpensesTable/ExpensesTable.js","redux/budget/select.js","components/ExpensesTable/ExpensesTableContainer.js","components/Values/Value.js","components/Values/Values.js","components/Values/ValuesContainer.js","components/App/App.js","components/App/AppContainer.js","redux/rootReducer.js","redux/budget/reducer.js","redux/store.js","redux/middleware/logger.js","index.js"],"names":["StyledForm","styled","form","Form","onSubmit","children","StyledLabel","label","props","customStyles","Label","StyledInput","input","Input","type","value","onChange","name","defaultProps","StyledButton","button","Button","onClick","BudgetForm","state","budget","handleChange","e","setState","target","handleSubmit","preventDefault","onSave","this","Component","connect","dispatch","types","payload","Number","actions","ExpenseForm","amount","id","shortid","generate","expense","Table","table","ExpensesTable","items","onRemove","length","map","key","getBudget","getExpenses","expenses","getTotalExpensesValue","reduce","total","calculateBalance","selects","Container","div","isPositive","p","Amount","Value","section","Values","balance","App","rootReducers","combineReducers","filter","middleware","store","next","action","console","group","info","groupEnd","composeEnhancers","composeWithDevTools","applyMiddleware","createStore","ReactDOM","render","document","getElementById"],"mappings":"0mBAIA,IAAMA,EAAaC,IAAOC,KAAV,KAmBDC,EATF,SAAC,GAAD,QAAGC,gBAAH,MAAc,kBAAM,MAApB,EAA0BC,EAA1B,EAA0BA,SAA1B,OACX,kBAACL,EAAD,CAAYI,SAAUA,GAAWC,I,mKCXnC,IAAMC,EAAcL,IAAOM,MAAV,KAKb,SAAAC,GAAK,OAAIA,EAAMC,gBAYJC,EATD,SAAC,GAAD,IAAGL,EAAH,EAAGA,SAAUI,EAAb,EAAaA,aAAb,OACZ,kBAACH,EAAD,CAAaG,aAAcA,GAAeJ,I,4RCT5C,IAAMM,EAAcV,IAAOW,MAAV,KAeXC,EAAQ,SAAC,GAAD,QACZC,YADY,MACL,QADK,MAEZC,aAFY,MAEJ,GAFI,MAGZC,gBAHY,MAGD,kBAAM,MAHL,MAIZC,YAJY,MAIL,GAJK,SAKR,kBAACN,EAAD,CAAaG,KAAMA,EAAMC,MAAOA,EAAOC,SAAUA,EAAUC,KAAMA,KAEvEJ,EAAMK,aAAe,CACnBD,KAAM,IAUOJ,Q,yjBCjCf,IAAMM,EAAelB,IAAOmB,OAAV,KAwBZC,EAAS,SAAC,GAAD,QAAGP,YAAH,MAAU,SAAV,MAAoBP,aAApB,MAA4B,GAA5B,MAAgCe,eAAhC,MAA0C,kBAAM,MAAhD,SACb,kBAACH,EAAD,CAAcL,KAAMA,EAAMQ,QAASA,GAChCf,IAILc,EAAOH,aAAe,CACpBJ,KAAM,SACNP,MAAO,GACPe,QAAS,kBAAM,OASFD,QCnCME,E,2MACnBC,MAAQ,CACNC,OAAQ,G,EAOVC,aAAe,SAAAC,GACb,EAAKC,SAAS,CACZH,OAAQE,EAAEE,OAAOd,S,EAIrBe,aAAe,SAAAH,GACbA,EAAEI,iBADgB,IAEVN,EAAW,EAAKD,MAAhBC,OAER,EAAKjB,MAAMwB,OAAOP,GAClB,EAAKG,SAAS,CAAEH,OAAQ,K,wEAGhB,IACAA,EAAWQ,KAAKT,MAAhBC,OAER,OACE,kBAAC,EAAD,CAAMrB,SAAU6B,KAAKH,cACnB,kBAAC,EAAD,CAAOrB,aAhCE,gCAgCT,0BAEE,kBAAC,EAAD,CAAOK,KAAK,SAASC,MAAOU,EAAQT,SAAUiB,KAAKP,gBAGrD,kBAAC,EAAD,CAAQnB,MAAM,OAAOO,KAAK,gB,GAjCMoB,aCXzB,EACD,aADC,EAEA,cAFA,EAGG,iBCKHC,cAAQ,MAJI,SAAAC,GAAQ,MAAK,CACtCJ,OAAQ,SAAAjB,GAAK,OAAIqB,ECHM,SAAArB,GACvB,MAAO,CACLD,KAAMuB,EACNC,QAAS,CACPvB,MAAOwB,OAAOxB,KDDQyB,CAAkBzB,QAG/BoB,CAAkCZ,G,yBEI5BkB,E,2MACnBjB,MAAQ,CACNP,KAAM,GACNyB,OAAQ,G,EAOVhB,aAAe,SAAAC,GACb,EAAKC,SAAL,eACGD,EAAEE,OAAOZ,KAAOU,EAAEE,OAAOd,S,EAI9Be,aAAe,SAAAH,GACbA,EAAEI,iBADgB,MAEO,EAAKP,MAAtBP,EAFU,EAEVA,KAAMyB,EAFI,EAEJA,OAEd,EAAKlC,MAAMwB,OAAO,CAChBW,GAAIC,IAAQC,WACZ5B,OACAyB,OAAQH,OAAOG,KAGjB,EAAKd,SAAS,CAAEX,KAAM,GAAIyB,OAAQ,K,wEAG1B,IAAD,EACkBT,KAAKT,MAAtBP,EADD,EACCA,KAAMyB,EADP,EACOA,OAEd,OACE,kBAAC,EAAD,CAAMtC,SAAU6B,KAAKH,cACnB,kBAAC,EAAD,CAAOrB,aAtCE,gCAsCT,qBAEE,kBAAC,EAAD,CACEK,KAAK,OACLG,KAAK,OACLF,MAAOE,EACPD,SAAUiB,KAAKP,gBAGnB,kBAAC,EAAD,CAAOjB,aA/CE,gCA+CT,uBAEE,kBAAC,EAAD,CACEK,KAAK,SACLG,KAAK,SACLF,MAAO2B,EACP1B,SAAUiB,KAAKP,gBAInB,kBAAC,EAAD,CAAQnB,MAAM,MAAMO,KAAK,gB,GArDQoB,aCJ1BC,cAAQ,MAJI,SAAAC,GAAQ,MAAK,CACtCJ,OAAQ,SAAAc,GAAO,OAAIV,EFOZ,CACLtB,KAAMuB,EACNC,QAAS,CACPvB,MEV2C+B,SAGlCX,CAAkCM,G,yQCHjD,IAAMM,EAAQ9C,IAAO+C,MAAV,KA8CIC,EA9BO,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACpB,kBAACJ,EAAD,KACE,+BACE,4BACE,4CACA,8CACA,+BAGJ,+BACGG,GACCA,EAAME,OAAS,GACfF,EAAMG,KAAI,gBAAGV,EAAH,EAAGA,GAAI1B,EAAP,EAAOA,KAAMyB,EAAb,EAAaA,OAAb,OACR,wBAAIY,IAAKX,GACP,4BAAK1B,GACL,4BAAKyB,GACL,4BACE,kBAAC,EAAD,CAAQnC,MAAM,SAASe,QAAS,kBAAM6B,EAASR,cCtChDY,EAAY,SAAA/B,GAAK,OAAIA,EAAMC,QAC3B+B,EAAc,SAAAhC,GAAK,OAAIA,EAAMiC,UAE7BC,EAAwB,SAAAD,GACnC,OAAOA,EAASE,QAAO,SAACC,EAAO7C,GAAR,OAAkB6C,EAAQ7C,EAAM2B,SAAQ,IAGpDmB,EAAmB,SAAArC,GAAK,OACnC+B,EAAU/B,GAASkC,EAAsBlC,EAAMiC,WCKlCtB,eARS,SAAAX,GAAK,MAAK,CAChC0B,MAAOY,EAAoBtC,OAGF,SAAAY,GAAQ,MAAK,CACtCe,SAAU,SAAAR,GAAE,OAAIP,ELUW,SAAAO,GAC3B,MAAO,CACL7B,KAAMuB,EACNC,QAAS,CACPK,OKdqBH,CAAsBG,QAGlCR,CAA6Cc,G,kdCT5D,IAAMc,EAAY9D,IAAO+D,IAAV,KAGJ,SAAAxD,GAAK,OAAKA,EAAMyD,WAAa,UAAY,aAI9CvD,EAAQT,IAAOiE,EAAV,KAQLC,EAASlE,IAAOiE,EAAV,KAMNE,EAAQ,SAAC,GAAD,IAAG7D,EAAH,EAAGA,MAAOQ,EAAV,EAAUA,MAAOkD,EAAjB,EAAiBA,WAAjB,OACZ,kBAACF,EAAD,CAAWE,WAAYA,GACrB,kBAAC,EAAD,KAAQ1D,GACR,kBAAC4D,EAAD,KAASpD,EAAT,WAIJqD,EAAMlD,aAAe,CACnB+C,YAAY,GASCG,S,6JCpCf,IAAML,GAAY9D,IAAOoE,QAAV,MAoBAC,GAdA,SAAC,GAAD,QAAG7C,cAAH,MAAY,EAAZ,MAAegC,gBAAf,MAA0B,EAA1B,MAA6Bc,eAA7B,MAAuC,EAAvC,SACb,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAOhE,MAAM,SAASQ,MAAOU,EAAQwC,YAAU,IAC/C,kBAAC,GAAD,CAAO1D,MAAM,WAAWQ,MAAO+C,EAA8BL,KAC7D,kBAAC,GAAD,CAAOlD,MAAM,UAAUQ,MAAOwD,EAASN,WAAYM,GAAW,MCNnDpC,gBANS,SAAAX,GAAK,MAAK,CAChCC,OAAQqC,EAAkBtC,GAC1BiC,SAAUK,EAAoBtC,GAC9B+C,QAAST,EAAyBtC,MAGrBW,CAAyBmC,I,gSCHxC,IAAMP,GAAY9D,IAAO+D,IAAV,MAqBAQ,GATH,kBACV,kBAAC,GAAD,KACE,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QChBWrC,gBAJS,SAAAX,GAAK,MAAK,CAChCiC,SAAUK,EAAoBtC,MAGjBW,CAAyBqC,I,0BCAzBC,GALMC,2BAAgB,CACnCjD,OCF2B,WAAmC,IAAlCD,EAAiC,uDAAzB,EAAyB,yCAApBV,EAAoB,EAApBA,KAAMwB,EAAc,EAAdA,QAC/C,OAAQxB,GACN,KAAKuB,EACH,OAAOC,EAAQvB,MACjB,QACE,OAAOS,IDFXiC,SCM4B,WAAoC,IAAnCjC,EAAkC,uDAA1B,GAA0B,yCAApBV,EAAoB,EAApBA,KAAMwB,EAAc,EAAdA,QACjD,OAAQxB,GACN,KAAKuB,EACH,MAAM,GAAN,oBAAWb,GAAX,CAAkBc,EAAQvB,QAC5B,KAAKsB,EACH,OAAOb,EAAMmD,QAAO,SAAA5D,GAAK,OAAIA,EAAM4B,KAAOL,EAAQK,MACpD,QACE,OAAOnB,MCbPoD,GAAa,CCLJ,SAAAC,GAAK,OAAI,SAAAC,GAAI,OAAI,SAAAC,GAK9B,OAJAC,QAAQC,MAAMF,EAAOjE,MACrBkE,QAAQE,KAAK,cAAeH,GAC5BC,QAAQG,SAASJ,EAAOjE,MAEjBgE,EAAKC,ODCRK,GAAmBC,+BAAoBC,mBAAe,WAAf,EAAmBV,KAIjDC,GAFDU,uBAAYd,GAAcW,I,MEAxCI,IAASC,OACP,kBAAC,IAAD,CAAUZ,MAAOA,IACf,kBAAC,GAAD,OAEFa,SAASC,eAAe,W","file":"static/js/main.777feb74.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport T from 'prop-types';\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 16px;\r\n  width: 100%;\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nconst Form = ({ onSubmit = () => null, children }) => (\r\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\r\n);\r\n\r\nForm.propTypes = {\r\n  onSubmit: T.func.isRequired,\r\n  children: T.node.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport T from 'prop-types';\r\n\r\nconst StyledLabel = styled.label`\r\n  display: inline-block;\r\n  font-size: 20px;\r\n  color: #171718;\r\n  cursor: pointer;\r\n  ${props => props.customStyles}\r\n`;\r\n\r\nconst Label = ({ children, customStyles }) => (\r\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\r\n);\r\n\r\nLabel.propTypes = {\r\n  children: T.node.isRequired,\r\n  customStyles: T.string.isRequired,\r\n};\r\n\r\nexport default Label;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport T from 'prop-types';\r\n\r\nconst StyledInput = styled.input`\r\n  color: #171718;\r\n  font: inherit;\r\n  font-size: 1.2rem;\r\n  padding: 16px;\r\n  border-radius: 4px;\r\n  border: 1px solid #bdbdbd;\r\n  width: 100%;\r\n  outline: 0;\r\n\r\n  &:focus {\r\n    border: 1px solid #2b32b2;\r\n  }\r\n`;\r\n\r\nconst Input = ({\r\n  type = ' text',\r\n  value = '',\r\n  onChange = () => null,\r\n  name = '',\r\n}) => <StyledInput type={type} value={value} onChange={onChange} name={name} />;\r\n\r\nInput.defaultProps = {\r\n  name: '',\r\n};\r\n\r\nInput.propTypes = {\r\n  type: T.string.isRequired,\r\n  value: T.oneOfType([T.string, T.number]).isRequired,\r\n  onChange: T.func.isRequired,\r\n  name: T.string,\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport T from 'prop-types';\r\n\r\nconst StyledButton = styled.button`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  border: 0;\r\n  outline: 0;\r\n  padding: 8px 24px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\r\n  font: inherit;\r\n  text-transform: uppercase;\r\n  user-select: none;\r\n\r\n  transition: background-color 200ms ease-in-out;\r\n\r\n  &:hover {\r\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n\r\nconst Button = ({ type = 'button', label = '', onClick = () => null }) => (\r\n  <StyledButton type={type} onClick={onClick}>\r\n    {label}\r\n  </StyledButton>\r\n);\r\n\r\nButton.defaultProps = {\r\n  type: 'button',\r\n  label: '',\r\n  onClick: () => null,\r\n};\r\n\r\nButton.propTypes = {\r\n  type: T.string,\r\n  label: T.string,\r\n  onClick: T.func,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport T from 'prop-types';\r\nimport Form from '../shared/Form';\r\nimport Label from '../shared/Label';\r\nimport Input from '../shared/Input';\r\nimport Button from '../shared/Button';\r\n\r\nconst labelStyles = `\r\n  margin-bottom: 16px;  \r\n`;\r\n\r\nexport default class BudgetForm extends Component {\r\n  state = {\r\n    budget: 0,\r\n  };\r\n\r\n  static propTypes = {\r\n    onSave: T.func.isRequired,\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      budget: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { budget } = this.state;\r\n\r\n    this.props.onSave(budget);\r\n    this.setState({ budget: 0 });\r\n  };\r\n\r\n  render() {\r\n    const { budget } = this.state;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Label customStyles={labelStyles}>\r\n          Enter your total budget\r\n          <Input type=\"number\" value={budget} onChange={this.handleChange} />\r\n        </Label>\r\n\r\n        <Button label=\"Save\" type=\"submit\" />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","export default {\r\n  ADD_BUDGET: 'ADD_BUDGET',\r\n  ADD_EXPENSE: 'ADD_EXPENSE',\r\n  REMOVE_EXPENSE: 'REMOVE_EXPENSE',\r\n};\r\n","import { connect } from 'react-redux';\r\nimport BudgetForm from './BudgetForm';\r\nimport * as actions from '../../redux/budget/action';\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSave: value => dispatch(actions.addBudget(value)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(BudgetForm);\r\n","import types from './type';\r\n\r\nexport const addBudget = value => {\r\n  return {\r\n    type: types.ADD_BUDGET,\r\n    payload: {\r\n      value: Number(value),\r\n    },\r\n  };\r\n};\r\n\r\nexport const addExpense = expenses => {\r\n  return {\r\n    type: types.ADD_EXPENSE,\r\n    payload: {\r\n      value: expenses,\r\n    },\r\n  };\r\n};\r\n\r\nexport const removeExpense = id => {\r\n  return {\r\n    type: types.REMOVE_EXPENSE,\r\n    payload: {\r\n      id,\r\n    },\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport T from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport Form from '../shared/Form';\r\nimport Label from '../shared/Label';\r\nimport Input from '../shared/Input';\r\nimport Button from '../shared/Button';\r\n\r\nconst labelStyles = `\r\n  margin-bottom: 16px;  \r\n`;\r\n\r\nexport default class ExpenseForm extends Component {\r\n  state = {\r\n    name: '',\r\n    amount: 0,\r\n  };\r\n\r\n  static propTypes = {\r\n    onSave: T.func.isRequired,\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, amount } = this.state;\r\n\r\n    this.props.onSave({\r\n      id: shortid.generate(),\r\n      name,\r\n      amount: Number(amount),\r\n    });\r\n\r\n    this.setState({ name: '', amount: 0 });\r\n  };\r\n\r\n  render() {\r\n    const { name, amount } = this.state;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Label customStyles={labelStyles}>\r\n          Enter expense name\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Label>\r\n        <Label customStyles={labelStyles}>\r\n          Enter expense amount\r\n          <Input\r\n            type=\"number\"\r\n            name=\"amount\"\r\n            value={amount}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Label>\r\n\r\n        <Button label=\"Add\" type=\"submit\" />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","import { connect } from 'react-redux';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport * as actions from '../../redux/budget/action';\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSave: expense => dispatch(actions.addExpense(expense)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ExpenseForm);\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Button from '../shared/Button';\r\n\r\nconst Table = styled.table`\r\n  border-collapse: collapse;\r\n  text-align: center;\r\n  width: 100%;\r\n\r\n  tr {\r\n    border-bottom: 1px solid #212121;\r\n  }\r\n\r\n  td,\r\n  th {\r\n    padding-top: 8px;\r\n    padding-bottom: 8px;\r\n  }\r\n`;\r\n\r\nconst ExpensesTable = ({ items, onRemove }) => (\r\n  <Table>\r\n    <thead>\r\n      <tr>\r\n        <th>Expense name</th>\r\n        <th>Expense amount</th>\r\n        <th />\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {items &&\r\n        items.length > 0 &&\r\n        items.map(({ id, name, amount }) => (\r\n          <tr key={id}>\r\n            <td>{name}</td>\r\n            <td>{amount}</td>\r\n            <td>\r\n              <Button label=\"Delete\" onClick={() => onRemove(id)} />\r\n            </td>\r\n          </tr>\r\n        ))}\r\n    </tbody>\r\n  </Table>\r\n);\r\n\r\nExpensesTable.propTypes = {\r\n  items: T.arrayOf(T.object).isRequired,\r\n  onRemove: T.func.isRequired,\r\n};\r\n\r\nexport default ExpensesTable;\r\n","export const getBudget = state => state.budget;\r\nexport const getExpenses = state => state.expenses;\r\n\r\nexport const getTotalExpensesValue = expenses => {\r\n  return expenses.reduce((total, value) => total + value.amount, 0);\r\n};\r\n\r\nexport const calculateBalance = state =>\r\n  getBudget(state) - getTotalExpensesValue(state.expenses);\r\n","import { connect } from 'react-redux';\r\nimport ExpensesTable from './ExpensesTable';\r\nimport * as actions from '../../redux/budget/action';\r\nimport * as selects from '../../redux/budget/select';\r\n\r\nconst mapStateToProps = state => ({\r\n  items: selects.getExpenses(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onRemove: id => dispatch(actions.removeExpense(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpensesTable);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport T from 'prop-types';\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n  padding: 8px 24px;\r\n  color: ${props => (props.isPositive ? '#388E3C' : '#D32F2F')};\r\n  user-select: none;\r\n`;\r\n\r\nconst Label = styled.p`\r\n  margin-top: 0;\r\n  margin-bottom: 8px;\r\n  text-transform: uppercase;\r\n  font-weight: 500;\r\n  font-size: 24px;\r\n`;\r\n\r\nconst Amount = styled.p`\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  font-size: 48px;\r\n`;\r\n\r\nconst Value = ({ label, value, isPositive }) => (\r\n  <Container isPositive={isPositive}>\r\n    <Label>{label}</Label>\r\n    <Amount>{value}&nbsp;&#x24;</Amount>\r\n  </Container>\r\n);\r\n\r\nValue.defaultProps = {\r\n  isPositive: false,\r\n};\r\n\r\nValue.propTypes = {\r\n  label: T.string.isRequired,\r\n  value: T.number.isRequired,\r\n  isPositive: T.bool,\r\n};\r\n\r\nexport default Value;\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Value from './Value';\r\nimport * as selects from '../../redux/budget/select';\r\n\r\nconst Container = styled.section`\r\n  display: inline-flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst Values = ({ budget = 0, expenses = 0, balance = 0 }) => (\r\n  <Container>\r\n    <Value label=\"Budget\" value={budget} isPositive />\r\n    <Value label=\"Expenses\" value={selects.getTotalExpensesValue(expenses)} />\r\n    <Value label=\"Balance\" value={balance} isPositive={balance >= 0} />\r\n  </Container>\r\n);\r\n\r\nValues.propTypes = {\r\n  budget: T.number.isRequired,\r\n  expenses: T.arrayOf(T.object).isRequired,\r\n  balance: T.number.isRequired,\r\n};\r\n\r\nexport default Values;\r\n","import { connect } from 'react-redux';\r\nimport Values from './Values';\r\nimport * as selects from '../../redux/budget/select';\r\n\r\nconst mapStateToProps = state => ({\r\n  budget: selects.getBudget(state),\r\n  expenses: selects.getExpenses(state),\r\n  balance: selects.calculateBalance(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Values);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport BudgetForm from '../BudgetForm';\r\nimport ExpenseForm from '../ExpenseForm';\r\nimport ExpensesTable from '../ExpensesTable';\r\nimport Values from '../Values';\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 340px 1fr;\r\n  align-items: flex-start;\r\n  grid-gap: 24px;\r\n  max-width: 960px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nconst App = () => (\r\n  <Container>\r\n    <BudgetForm />\r\n    <Values />\r\n    <ExpenseForm />\r\n    <ExpensesTable />\r\n  </Container>\r\n);\r\n\r\nexport default App;\r\n","import { connect } from 'react-redux';\r\nimport App from './App';\r\nimport * as selects from '../../redux/budget/select';\r\n\r\nconst mapStateToProps = state => ({\r\n  expenses: selects.getExpenses(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { combineReducers } from 'redux';\r\nimport { budgetReducer, expenseReducer } from './budget/reducer';\r\n\r\nconst rootReducers = combineReducers({\r\n  budget: budgetReducer,\r\n  expenses: expenseReducer,\r\n});\r\n\r\nexport default rootReducers;\r\n","import types from './type';\r\n\r\nexport const budgetReducer = (state = 0, { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD_BUDGET:\r\n      return payload.value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const expenseReducer = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD_EXPENSE:\r\n      return [...state, payload.value];\r\n    case types.REMOVE_EXPENSE:\r\n      return state.filter(value => value.id !== payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducers from './rootReducer';\r\nimport logger from './middleware/logger';\r\n\r\nconst middleware = [logger];\r\nconst composeEnhancers = composeWithDevTools(applyMiddleware(...middleware));\r\n\r\nconst store = createStore(rootReducers, composeEnhancers);\r\n\r\nexport default store;\r\n","const logger = store => next => action => {\r\n  console.group(action.type);\r\n  console.info('dispatching', action);\r\n  console.groupEnd(action.type);\r\n\r\n  return next(action);\r\n};\r\n\r\nexport default logger;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './components/App';\r\nimport store from './redux/store';\r\n\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}